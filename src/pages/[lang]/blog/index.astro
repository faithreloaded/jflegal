---
import BaseLayout from '../../../layouts/BaseLayout.astro';
import HeaderMega from '../../../components/header/header-mega/Header.astro';
import FooterGrid from '../../../components/footer/footer-grid/Footer.astro';
import { LOCALES, type Locale, loadT } from '../../../i18n';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  return (LOCALES as readonly string[]).map((lang) => ({ params: { lang } }));
}

const { lang } = Astro.params as { lang: Locale };
const t = await loadT(lang);
const allPosts = await getCollection('blog');
const posts = allPosts
  .filter((p) => p.id.startsWith(`${lang}/`))
  .sort((a, b) => +new Date(b.data.date) - +new Date(a.data.date));

console.log('Posts found:', posts.length);
console.log('All posts:', allPosts.map(p => ({ id: p.id, slug: p.slug })));
---

<BaseLayout title={`${lang==='es' ? 'Blog' : lang==='ca' ? 'Blog' : 'Blog'} | JF Legal`} description={lang==='es' ? 'Artículos y novedades sobre derecho fiscal, laboral, mercantil y sucesiones' : lang==='ca' ? 'Articles i novetats sobre dret fiscal, laboral, mercantil i successions' : 'Articles and updates about tax, labor, commercial and inheritance law'} lang={lang}>
  <HeaderMega lang={lang} />
  <main class="main">
    <div class="container blog-list">
      <header class="blog-header">
        <h1 class="blog-title">{lang==='es' ? 'Blog' : lang==='ca' ? 'Blog' : 'Blog'}</h1>
        <p class="blog-sub">{lang==='es' ? 'Artículos y novedades' : lang==='ca' ? 'Articles i novetats' : 'Articles and updates'}</p>
            <div class="blog-filters">
              <button class="chip">{lang==='es' ? 'Todos' : lang==='ca' ? 'Tots' : 'All'}</button>
              <button class="chip">{lang==='es' ? 'Fiscal' : lang==='ca' ? 'Fiscal' : 'Tax'}</button>
              <button class="chip">{lang==='es' ? 'Laboral' : lang==='ca' ? 'Laboral' : 'Labor'}</button>
              <button class="chip">{lang==='es' ? 'Mercantil' : lang==='ca' ? 'Mercantil' : 'Commercial'}</button>
              <button class="chip">{lang==='es' ? 'Sucesiones' : lang==='ca' ? 'Successions' : 'Inheritance'}</button>
            </div>
      </header>

          <!-- Minimal search between filters and latest title -->
          <div class="blog-search">
            <span class="search-icon" aria-hidden="true">
              <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" width="18" height="18">
                <circle cx="11" cy="11" r="8"></circle>
                <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
              </svg>
            </span>
            <input id="blogSearchInput" type="search" placeholder={lang==='es' ? 'Buscar en el blog…' : lang==='ca' ? 'Cercar al blog…' : 'Search the blog…'} aria-label={lang==='es' ? 'Buscar en el blog' : lang==='ca' ? 'Cercar al blog' : 'Search the blog'} />
          </div>

          <section class="latest">
            <h3 class="latest-title">{lang==='es' ? 'Últimos posts' : lang==='ca' ? 'Últims posts' : 'Latest posts'}</h3>
            <div class="latest-grid">
              {posts.length > 0 ? Array.from({ length: Math.min(3, posts.length) }, (_, index) => {
                const post = posts[index]; // Usar el post correspondiente al índice
                return (
                  <a class="blog-card" data-title={post.data.title} data-excerpt={post.data.excerpt} href={`/${lang}/blog/${post.slug.replace(`${lang}/`, '')}`} key={index}>
                    <img class="blog-card-bg" src={post.data.image || "/images/images/placeholder/placeholder.jpg"} alt={post.data.title} />
                    <div class="blog-card-overlay-bottom">
                      <div class="blog-card-row">
                        <h4 class="blog-card-heading">{post.data.title}</h4>
                        <div class="blog-date-pill">{new Date(post.data.date).toLocaleDateString(lang)}</div>
                      </div>
                      <p class="blog-card-description">{post.data.excerpt}</p>
                      <div class="blog-card-tags">
                        <span class="blog-tag">{lang==='es' ? 'Blog' : lang==='ca' ? 'Blog' : 'Blog'}</span>
                        <span class="blog-tag">{lang==='es' ? 'Artículo' : lang==='ca' ? 'Article' : 'Article'}</span>
                      </div>
                      <button class="blog-card-cta">{lang==='es' ? 'Leer más' : lang==='ca' ? 'Llegir més' : 'Read more'}</button>
                    </div>
                  </a>
                );
              }) : (
                <div class="no-posts">
                  <p>{lang==='es' ? 'No hay posts disponibles' : lang==='ca' ? 'No hi ha posts disponibles' : 'No posts available'}</p>
                </div>
              )}
            </div>
            <div id="noResults" class="no-results" style="display: none;">
              <p>{lang==='es' ? 'No se encontraron resultados para tu búsqueda' : lang==='ca' ? 'No s\'han trobat resultats per a la teva cerca' : 'No results found for your search'}</p>
            </div>
          </section>
    </div>
  </main>
  <FooterGrid lang={lang} />
</BaseLayout>

<script>
  const input = document.getElementById('blogSearchInput');
  const cards = Array.from(document.querySelectorAll('.blog-card'));
  const noResults = document.getElementById('noResults');
  if (input && cards.length) {
    input.addEventListener('input', () => {
      const q = input.value.trim().toLowerCase();
      let hasVisibleCards = false;
      cards.forEach((card) => {
        const title = (card.getAttribute('data-title') || '').toLowerCase();
        const excerpt = (card.getAttribute('data-excerpt') || '').toLowerCase();
        const match = !q || title.includes(q) || excerpt.includes(q);
        card.style.display = match ? 'block' : 'none';
        if (match) hasVisibleCards = true;
      });
      if (noResults) {
        noResults.style.display = (q && !hasVisibleCards) ? 'block' : 'none';
      }
    });
  }
</script>
    <style>
      .blog-list { 
        padding: var(--space-8) 0; 
        min-height: 60vh;
      }
      
      .blog-header { 
        text-align: center; 
        margin-bottom: var(--space-6); 
        max-width: 600px;
        margin-left: auto;
        margin-right: auto;
        opacity: 0;
        transform: translateY(20px);
        animation: fadeUp 0.6s ease-out 0.1s forwards;
      }
      
      .blog-title { 
        font-size: clamp(32px, 5vw, 48px); 
        font-weight: 400; 
        margin: 0 0 var(--space-3) 0; 
        color: var(--color-black);
        letter-spacing: -0.02em;
        line-height: 1.1;
      }
      
  .blog-sub { 
    color: var(--color-text); 
    margin: 0 0 var(--space-3) 0; /* un poco más de espacio antes de los filtros */
    font-size: 18px;
    line-height: 1.5;
  }
      
      .blog-filters { 
        display: flex; 
        gap: var(--space-1); 
        justify-content: center; 
        flex-wrap: wrap;
        opacity: 0;
        transform: translateY(20px);
        animation: fadeUp 0.6s ease-out 0.2s forwards;
      }
      
      .chip { 
        border: 1px solid var(--color-border); 
        background: transparent; 
        padding: var(--space-1) var(--space-3); 
        border-radius: 0px; 
        font-size: 12px; 
        cursor: pointer; 
        transition: all 0.2s ease;
        color: var(--color-text-secondary);
        font-weight: 500;
      }
      
      .chip:hover {
        background: var(--color-container);
        color: var(--color-text);
        border-color: var(--color-text-muted);
      }

      /* Minimal search */
      .blog-search { 
        max-width: 680px; 
        margin: 0 auto 0; 
        padding: 0 var(--space-4); 
        position: relative;
        opacity: 0;
        transform: translateY(20px);
        animation: fadeUp 0.6s ease-out 0.3s forwards;
      }
      .blog-search input[type="search"] {
        width: 100%;
        height: 44px;
        line-height: 44px; /* centra el texto verticalmente */
        border-radius: 0px;
        border: 1px solid var(--color-border);
        background: var(--color-background);
        padding: 0 16px 0 40px;
        font-size: 14px;
        color: var(--color-text);
        outline: none;
        transition: border-color 0.15s ease, box-shadow 0.15s ease;
      }
      .blog-search input[type="search"]::placeholder { color: var(--color-text-secondary); }
      .blog-search input[type="search"]:focus { border-color: var(--color-text-muted); box-shadow: 0 0 0 3px rgba(0,0,0,0.06); }
      .blog-search .search-icon { position: absolute; left: calc(var(--space-4) + 12px); top: 50%; transform: translateY(-50%); color: var(--color-text-secondary); pointer-events: none; line-height: 0; }
      .blog-search .search-icon svg { display: block; }

      .latest { 
        max-width: 1200px; 
        margin: 0 auto; 
        padding: 0 var(--space-4);
        margin-top: var(--space-8);
        margin-bottom: var(--space-8);
        opacity: 0;
        transform: translateY(20px);
        animation: fadeUp 0.6s ease-out 0.4s forwards;
      }
      
      .latest-title { 
        font-size: 24px; 
        font-weight: 400; 
        margin: 0 0 var(--space-3) 0; 
        color: var(--color-black);
        text-align: center;
      }
      
      .latest-grid { 
        display: grid; 
        grid-template-columns: repeat(3, 1fr); 
        gap: 24px; 
        max-width: 1200px; 
        margin: 0 auto; 
        align-items: stretch;
      }
      
      .blog-card { 
        position: relative;
        border-radius: 0px;
        overflow: hidden;
        background: #0b0b0c;
        aspect-ratio: 4 / 5; /* punto intermedio */
        width: 100%;
        flex-shrink: 0;
        text-decoration: none;
        color: inherit;
        transition: all 0.3s ease;
        display: block;
      }
      
      @media (hover: hover) and (pointer: fine) {
        .blog-card:hover { 
          transform: translateY(-4px);
          box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        }
      }
      
      .blog-card-bg { 
        width: 100%;
        height: 100%;
        position: absolute;
        top: 0;
        left: 0;
        object-fit: cover;
        transition: transform 0.3s ease;
      }
      
      @media (hover: hover) and (pointer: fine) {
        .blog-card:hover .blog-card-bg {
          transform: scale(1.05);
        }
      }
      
      @media (hover: hover) and (pointer: fine) {
        .blog-card:hover .blog-card-overlay-bottom {
          bottom: 0;
        }
      }
      
      .blog-card-overlay-bottom {
        position: absolute;
        bottom: -60px;
        left: 0;
        right: 0;
        background: rgba(10,10,11,0.30);
        border-top: 1px solid rgba(255,255,255,0.35);
        backdrop-filter: blur(8px);
        -webkit-backdrop-filter: blur(8px);
        padding: 16px;
        border-bottom-left-radius: 0px;
        border-bottom-right-radius: 0px;
        display: flex;
        flex-direction: column;
        min-height: 34%; /* equilibrado para el punto intermedio */
        text-align: left;
        transition: bottom 0.4s ease;
      }
      
      .blog-card-row {
        display: flex;
        align-items: center;
        justify-content: space-between;
        gap: 12px;
        margin-bottom: 12px;
      }
      
      .blog-card-heading {
        margin: 0 0 12px 0;
        color: white;
        font-size: 24px;
        font-weight: 300;
      }
      
      .blog-date-pill {
        color: white;
        background: rgba(0,0,0,0.35);
        padding: 6px 10px;
        border-radius: 0px;
        font-weight: var(--font-weight-light);
        font-size: 14px;
        backdrop-filter: blur(3px);
      }
      
      .blog-card-description {
        margin: 0 0 16px 0;
        color: rgba(240,240,240,0.85);
        font-size: 14px;
        line-height: 1.35;
        font-weight: var(--font-weight-light);
      }
      
      .blog-card-tags {
        display: flex;
        gap: 10px;
        margin-bottom: 16px;
        justify-content: flex-start;
      }
      
      .blog-tag {
        color: rgba(255,255,255,0.9);
        background: rgba(255,255,255,0.14);
        border-radius: 0px;
        padding: 0 10px;
        font-size: 12px;
        display: inline-flex;
        align-items: center;
        height: 32px;
        line-height: 1;
        white-space: nowrap;
      }
      
      .blog-card-cta {
        width: 100%;
        background: white;
        color: black;
        font-weight: 400;
        font-size: 14px;
        border: none;
        border-radius: 0px;
        padding: 12px 16px;
        cursor: pointer;
        margin-top: auto;
        transition: filter 0.2s ease;
      }
      
      @media (hover: hover) and (pointer: fine) {
        .blog-card-cta:hover {
          filter: brightness(0.95);
        }
      }

      /* Disable hover effects on touch devices explicitly */
      @media (hover: none), (pointer: coarse) {
        .blog-card { transition: none; }
        .blog-card:hover { transform: none; box-shadow: none; }
        .blog-card .blog-card-bg { transition: none; transform: none !important; }
        .blog-card .blog-card-overlay-bottom { transition: none; }
        .blog-card-cta { transition: none; }
        .blog-card-cta:hover { filter: none; }
      }
      
      .no-posts { 
        text-align: center; 
        padding: var(--space-8); 
        color: var(--color-text-muted); 
        font-size: 16px;
      }
      
      .no-results {
        text-align: center;
        padding: var(--space-6);
        color: var(--color-text-muted);
        font-size: 14px;
        font-style: italic;
      }

      /* Responsive */
      @media (max-width: 1024px) { 
        .latest-grid { 
          grid-template-columns: repeat(2, 1fr); 
          gap: 20px;
        }
        .blog-list { 
          padding: var(--space-6) 0; 
        }
      }
      
      @media (max-width: 768px) { 
        .latest-grid { 
          grid-template-columns: repeat(2, 1fr); 
          gap: 16px;
        }
        .blog-header { 
          margin-bottom: var(--space-6); 
        }
        .latest { margin-top: var(--space-6); }
        .blog-title { 
          font-size: 36px; 
        }
        .blog-sub { 
          font-size: 16px; 
        }
        .blog-card {
          aspect-ratio: 4 / 5;
        }
        /* Forzar sin hover en móvil por anchura (modo responsive de escritorio también) */
        .blog-card:hover { 
          transform: none !important; 
          box-shadow: none !important; 
        }
        .blog-card:hover .blog-card-bg { 
          transform: none !important; 
        }
        .blog-card:hover .blog-card-overlay-bottom { 
          bottom: 0 !important; 
        }
        .blog-card-overlay-bottom {
          min-height: 200px;
          padding: 12px;
          bottom: 0;
        }
        .blog-card-heading {
          font-size: 20px;
        }
        .blog-card-description {
          font-size: 13px;
        }
        .blog-card-cta {
          font-size: 13px;
        }
      }
      
      @media (max-width: 480px) {
        .blog-list { 
          padding: var(--space-4) 0; 
        }
        .latest { 
          padding: 0 var(--space-3);
          margin-top: var(--space-6);
        }
        .blog-card {
          aspect-ratio: 4 / 5;
        }
        /* Refuerzo extra en móviles pequeños */
        .blog-card:hover { 
          transform: none !important; 
          box-shadow: none !important; 
        }
        .blog-card:hover .blog-card-bg { 
          transform: none !important; 
        }
        .blog-card:hover .blog-card-overlay-bottom { 
          bottom: 0 !important; 
        }
        .blog-card-overlay-bottom {
          min-height: 180px;
          padding: 10px;
          bottom: 0;
        }
        .blog-card-heading {
          font-size: 18px;
        }
        .blog-card-description {
          font-size: 12px;
        }
        .blog-card-cta {
          font-size: 12px;
        }
        .blog-filters { 
          gap: var(--space-1);
        }
        .chip { 
          padding: 6px var(--space-2); 
          font-size: 11px;
        }
      }

      @media (max-width: 600px) {
        .latest-grid {
          grid-template-columns: 1fr;
        }
      }

      /* Animación fade up muy sutil */
      @keyframes fadeUp {
        from {
          opacity: 0;
          transform: translateY(20px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }
    </style>

