---
import { type Locale, loadT } from '../../../i18n';

interface Props {
  lang: Locale;
}

const { lang } = Astro.props;
const t = await loadT(lang, ['contact']);

// Fallback translations para contacto si el sistema no funciona
const contactFallback = {
  es: {
    sectionTitle: "Contacto",
    title: "¿Necesitas asesoramiento legal?",
    description: "En JF Legal ofrecemos asesoramiento especializado en derecho fiscal, laboral, mercantil y sucesiones. Nuestro equipo de abogados con más de 15 años de experiencia está preparado para resolver tus consultas legales de manera eficiente y profesional.",
    info: {
      email: "info@jflegalconsulting.com",
      phone: "931701480",
      location: "Calle Córsega 239, Principal 2, Barcelona",
      hours: "Lunes a Viernes: 9:00 - 18:00"
    },
    form: {
      title: "Envíanos un mensaje",
      fields: {
        name: "Nombre completo",
        email: "Correo electrónico",
        phone: "Teléfono",
        service: "Servicio de interés",
        message: "Mensaje",
        messagePlaceholder: "Cuéntanos brevemente tu consulta legal..."
      },
      services: {
        fiscal: "Fiscal y Contable",
        laboral: "Laboral",
        mercantil: "Mercantil y Societario",
        sucesiones: "Sucesiones",
        general: "Consulta general"
      },
      submit: "Enviar mensaje",
      success: "¡Mensaje enviado correctamente! Te responderemos pronto."
    }
  },
  en: {
    sectionTitle: "Contact",
    title: "Do you need legal advice?",
    description: "At JF Legal we offer specialized advice in tax, labor, commercial and inheritance law. Our team of lawyers with more than 15 years of experience is prepared to resolve your legal queries efficiently and professionally.",
    info: {
      email: "info@jflegalconsulting.com",
      phone: "931701480",
      location: "Calle Córsega 239, Principal 2, Barcelona",
      hours: "Monday to Friday: 9:00 - 18:00"
    },
    form: {
      title: "Send us a message",
      fields: {
        name: "Full name",
        email: "Email",
        phone: "Phone",
        service: "Service of interest",
        message: "Message",
        messagePlaceholder: "Tell us briefly about your legal consultation..."
      },
      services: {
        fiscal: "Tax and Accounting",
        laboral: "Labor Law",
        mercantil: "Commercial and Corporate",
        sucesiones: "Inheritance",
        general: "General consultation"
      },
      submit: "Send message",
      success: "Message sent successfully! We will respond soon."
    }
  },
  ca: {
    sectionTitle: "Contacte",
    title: "Necessites assessorament legal?",
    description: "A JF Legal oferim assessorament especialitzat en dret fiscal, laboral, mercantil i successions. El nostre equip d'advocats amb més de 15 anys d'experiència està preparat per resoldre les teves consultes legals de manera eficient i professional.",
    info: {
      email: "info@jflegalconsulting.com",
      phone: "931701480",
      location: "Calle Córsega 239, Principal 2, Barcelona",
      hours: "Dilluns a Divendres: 9:00 - 18:00"
    },
    form: {
      title: "Envia'ns un missatge",
      fields: {
        name: "Nom complet",
        email: "Correu electrònic",
        phone: "Telèfon",
        service: "Servei d'interès",
        message: "Missatge",
        messagePlaceholder: "Explica'ns breument la teva consulta legal..."
      },
      services: {
        fiscal: "Fiscal i Comptable",
        laboral: "Laboral",
        mercantil: "Mercantil i Societari",
        sucesiones: "Successions",
        general: "Consulta general"
      },
      submit: "Enviar missatge",
      success: "Missatge enviat correctament! Et respondrem aviat."
    }
  }
};

// Función helper para obtener traducciones del contacto con fallback
function getContactTranslation(key: string) {
  const translation = t(`contact.${key}`);
  if (translation === `contact.${key}`) {
    // Si no se encuentra la traducción, usar fallback
    const keys = key.split('.');
    let value = contactFallback[lang];
    for (const k of keys) {
      value = value?.[k];
    }
    return value || key;
  }
  return translation;
}

const title = getContactTranslation('title');
const description = getContactTranslation('description');
const formTitle = getContactTranslation('form.title');
const prefix = `/${lang}`;
---

<section class="contact-simple">
  <div class="container">
    <!-- Título centrado como FAQ -->
    <div class="contact-header contact-animate">
      <h2 class="contact-section-title">{getContactTranslation('sectionTitle')}</h2>
    </div>
    
    <div class="contact-grid">
      <!-- Columna izquierda: Información -->
      <div class="contact-info contact-animate">
        <h3 class="contact-main-title">{title}</h3>
        
        <div class="contact-description">
          <p>{description}</p>
        </div>
        
        <div class="contact-details-simple">
          <p><strong>Email:</strong> {getContactTranslation('info.email')}</p>
          <p><strong>Teléfono:</strong> {getContactTranslation('info.phone')}</p>
          <p><strong>Ubicación:</strong> {getContactTranslation('info.location')}</p>
          <p><strong>Horario:</strong> {getContactTranslation('info.hours')}</p>
        </div>
      </div>
      
      <!-- Columna derecha: Formulario -->
      <div class="contact-form-container contact-animate">
        <div class="contact-form">
          <h3 class="form-title">{formTitle}</h3>
          
          <form id="homeContactForm" class="form" action="https://formspree.io/f/xgvnlgbq" method="POST">
            <div class="form-row">
              <div class="form-group">
                <input type="text" name="name" class="form-input" placeholder={getContactTranslation('form.fields.name')} required>
              </div>
              <div class="form-group">
                <input type="email" name="email" class="form-input" placeholder={getContactTranslation('form.fields.email')} required>
              </div>
            </div>
            
            <div class="form-row">
              <div class="form-group">
                <input type="tel" name="phone" class="form-input" placeholder={getContactTranslation('form.fields.phone')}>
              </div>
              <div class="form-group">
                <select name="service" class="form-select" required>
                  <option value="">{getContactTranslation('form.fields.service')}</option>
                  <option value="fiscal">{getContactTranslation('form.services.fiscal')}</option>
                  <option value="laboral">{getContactTranslation('form.services.laboral')}</option>
                  <option value="mercantil">{getContactTranslation('form.services.mercantil')}</option>
                  <option value="sucesiones">{getContactTranslation('form.services.sucesiones')}</option>
                  <option value="general">{getContactTranslation('form.services.general')}</option>
                </select>
              </div>
            </div>
            
            <div class="form-group">
              <textarea name="message" class="form-textarea" rows="4" placeholder={getContactTranslation('form.fields.messagePlaceholder')} required></textarea>
            </div>

            <div class="form-consent light">
              <label>
                <input type="checkbox" name="consent" required />
                <span>
                  {lang === 'es' ? 'Acepto la ' : lang === 'ca' ? 'Accepto la ' : 'I accept the '} 
                  <a href={`/${lang}/politica-privacidad`} target="_blank" rel="noopener">{lang === 'es' ? 'Política de Privacidad' : lang === 'ca' ? 'Política de Privacitat' : 'Privacy Policy'}</a>
                  {lang === 'es' ? ' y los ' : lang === 'ca' ? ' i els ' : ' and the '}
                  <a href={`/${lang}/terminos-condiciones`} target="_blank" rel="noopener">{lang === 'es' ? 'Términos y Condiciones' : lang === 'ca' ? 'Termes i Condicions' : 'Terms and Conditions'}</a>
                </span>
              </label>
            </div>
            
            <button type="submit" class="form-submit" id="homeContactSubmit">
              {getContactTranslation('form.submit')}
              <span class="btn-loader" aria-hidden="true"></span>
            </button>
          </form>
          
          <div class="form-success" id="form-success" style="display: none;">
            <p>{getContactTranslation('form.success')}</p>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  // Animaciones fade in up escalonadas
  document.addEventListener('DOMContentLoaded', function() {
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          // Añadir delay escalonado
          if (entry.target.classList.contains('contact-header')) {
            setTimeout(() => {
              entry.target.classList.add('animate');
            }, 100);
          } else if (entry.target.classList.contains('contact-info')) {
            setTimeout(() => {
              entry.target.classList.add('animate');
            }, 200);
          } else if (entry.target.classList.contains('contact-form-container')) {
            setTimeout(() => {
              entry.target.classList.add('animate');
            }, 300);
          } else {
            entry.target.classList.add('animate');
          }
        }
      });
    }, {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    });

    // Observar elementos con animación
    const animatedElements = document.querySelectorAll('.contact-animate');
    animatedElements.forEach(el => {
      observer.observe(el);
    });
  });
</script>

<style>
    .contact-simple {
      background-color: var(--color-background-alt);
      padding: var(--space-8) 0;
    }

    /* Animaciones fade in up */
    .contact-animate {
      opacity: 0;
      transform: translateY(20px);
      transition: opacity 0.6s ease-out, transform 0.6s ease-out;
    }

    .contact-animate.animate {
      opacity: 1;
      transform: translateY(0);
    }

  .contact-header {
    text-align: center;
    margin-bottom: var(--space-8);
  }

  .contact-section-title {
    font-size: 48px;
    font-weight: 400;
    color: var(--color-black);
    margin: 0;
  }

  .contact-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: var(--space-8);
    align-items: start;
  }
  
  .contact-info {
    padding-right: var(--space-6);
  }
  
  .contact-main-title {
    font-size: 32px;
    font-weight: 400;
    margin: 0 0 var(--space-4) 0;
    color: var(--color-black);
  }
  
  .contact-description {
    margin-bottom: var(--space-6);
  }
  
  .contact-description p {
    font-size: 16px;
    line-height: 1.6;
    color: var(--color-text);
    margin: 0;
  }
  
  .contact-details-simple p {
    margin-bottom: var(--space-2);
    font-size: 14px;
    color: var(--color-text);
  }
  
  .contact-details-simple strong {
    color: var(--color-black);
  }
  
  .contact-form-container {
    background: white;
    padding: var(--space-6);
    border-radius: 0px;
    border: 1px solid var(--color-border);
  }
  
  .form-title {
    font-size: 20px;
    font-weight: 400;
    margin: 0 0 var(--space-4) 0;
    color: var(--color-black);
  }
  
  .form {
    display: flex;
    flex-direction: column;
    gap: var(--space-4);
  }
  
  .form-row {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: var(--space-4);
  }
  
  .form-group {
    display: flex;
    flex-direction: column;
  }
  
  .form-input,
  .form-select,
  .form-textarea {
    padding: 0 0 var(--space-2) 0;
    border: none;
    border-bottom: 1px solid var(--color-border);
    border-radius: 0px;
    font-size: 14px;
    font-family: inherit;
    background: transparent;
    color: var(--color-text);
    transition: border-bottom-color 0.2s ease;
  }
  
  .form-input:focus,
  .form-select:focus,
  .form-textarea:focus {
    outline: none;
    border-bottom-color: var(--color-primary);
  }
  
  .form-input::placeholder,
  .form-textarea::placeholder {
    color: var(--color-text-muted);
  }
  
  .form-textarea {
    resize: vertical;
    min-height: 80px;
  }
  
  .form-submit {
    background: var(--color-primary);
    color: white;
    border: none;
    padding: 16px 24px;
    border-radius: 0px;
    font-size: 14px;
    font-weight: 400;
    cursor: pointer;
    transition: all 0.2s ease;
    margin-top: var(--space-4);
  }
  
  .form-submit:hover {
    background: var(--color-primary-dark);
    transform: translateY(-1px);
  }
  
  .form-success {
    background: rgba(76, 175, 80, 0.1);
    border: 1px solid rgba(76, 175, 80, 0.3);
    border-radius: 0px;
    padding: 20px;
    margin-top: 20px;
    text-align: center;
  }
  
  .form-success p {
    color: var(--color-text);
    margin: 0;
    font-size: 14px;
    line-height: 1.5;
  }

  /* Responsive */
  @media (max-width: 1024px) {
    .contact-grid {
      grid-template-columns: 1fr;
      gap: var(--space-6);
    }
    
    .contact-info {
      padding-right: 0;
    }
    
    .form-row {
      grid-template-columns: 1fr;
    }
  }
  
  @media (max-width: 768px) {
    .contact-simple {
      padding: var(--space-6) 0;
    }
    
    .contact-section-title {
      font-size: 36px;
    }
    
    .contact-main-title {
      font-size: 28px;
    }
    
    .contact-form-container {
      padding: var(--space-4);
    }
  }

.form-consent.light {
  margin: var(--space-2) 0 var(--space-2) 0;
  font-size: 13px;
  color: var(--color-text);
  display: flex;
  align-items: flex-start;
  gap: 8px;
}
.form-consent.light label { display: flex; align-items: flex-start; gap: 8px; }
.form-consent.light a { color: var(--color-black); text-decoration: underline; }
.form-consent.light input[type="checkbox"] { margin-top: 2px; width: 16px; height: 16px; }

/* Hover igual al primario */
.form-submit {
  background: var(--color-primary);
  color: var(--color-background);
  border: 2px solid var(--color-primary);
}
.form-submit:hover {
  background-color: rgba(0, 0, 0, 0.8);
  color: var(--color-background);
  transform: translateY(-0.5px);
}

/* Loader */
.btn-loader {
  display: none;
  width: 16px;
  height: 16px;
  border: 2px solid var(--color-background);
  border-top-color: transparent;
  border-radius: 50%;
  animation: spin 0.8s linear infinite;
  margin-left: 8px;
}
@keyframes spin { from { transform: rotate(0deg); } to { transform: rotate(360deg); } }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('homeContactForm');
    const successMessage = document.getElementById('form-success');

    if (form) {
      form.addEventListener('submit', async function(e) {
        e.preventDefault();
        const submitButton = document.getElementById('homeContactSubmit');
        const loader = submitButton?.querySelector('.btn-loader');
        const originalText = submitButton?.textContent || '';
        if (submitButton && loader) {
          submitButton.setAttribute('disabled', 'true');
          loader.setAttribute('style', 'display:inline-block');
        }
        try {
          const res = await fetch(form.getAttribute('action'), {
            method: 'POST',
            body: new FormData(form),
            headers: { 'Accept': 'application/json' }
          });
          if (!res.ok) throw new Error('Request failed');
          successMessage.style.display = 'block';
          form.reset();
          successMessage.scrollIntoView({ behavior: 'smooth', block: 'center' });
          setTimeout(() => { successMessage.style.display = 'none'; }, 8000);
        } catch (err) {
          alert('Error al enviar el mensaje. Por favor, inténtalo de nuevo.');
        } finally {
          if (submitButton && loader) {
            submitButton.removeAttribute('disabled');
            loader.setAttribute('style', 'display:none');
          }
        }
      });
    }
  });
</script>
