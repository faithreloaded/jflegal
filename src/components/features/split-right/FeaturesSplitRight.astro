---
import './FeaturesSplitRight.css';
import { type Locale, loadT } from '../../../i18n';

interface Props {
  lang: Locale;
}

const { lang } = Astro.props;
const t = await loadT(lang, ['features']);

// Fallback translations para features si el sistema no funciona
const featuresFallback = {
  es: {
    mercantil: {
      title: "Mercantil y societario: seguridad en tus decisiones",
      subtitle: "Constitución de sociedades, pactos entre socios y contratación mercantil con rigor jurídico.",
      sections: {
        constitucion: {
          title: "Constitución y reorganización de sociedades",
          description: "Asesoramiento integral para elegir forma jurídica, constitución, reformas estatutarias, fusiones y adquisiciones, y estructuras holding."
        },
        contratacion: {
          title: "Contratación mercantil",
          description: "Redacción y revisión de contratos de distribución, suministro, franquicia y arrendamientos con protección real de intereses."
        }
      },
      additional: "También te ayudamos en disoluciones, concursos y reestructuraciones societarias."
    }
  },
  en: {
    mercantil: {
      title: "Commercial and corporate: security in your decisions",
      subtitle: "Company formation, shareholder agreements and commercial contracting with legal rigor.",
      sections: {
        constitucion: {
          title: "Company formation and reorganization",
          description: "Comprehensive advice to choose legal form, incorporation, statutory reforms, mergers and acquisitions, and holding structures."
        },
        contratacion: {
          title: "Commercial contracting",
          description: "Drafting and review of distribution, supply, franchise and lease contracts with real protection of interests."
        }
      },
      additional: "We also help you with dissolutions, insolvencies and corporate restructurings."
    }
  },
  ca: {
    mercantil: {
      title: "Mercantil i societari: seguretat en les teves decisions",
      subtitle: "Constitució de societats, pactes entre socis i contractació mercantil amb rigor jurídic.",
      sections: {
        constitucion: {
          title: "Constitució i reorganització de societats",
          description: "Assessorament integral per triar forma jurídica, constitució, reformes estatutàries, fusions i adquisicions, i estructures holding."
        },
        contratacion: {
          title: "Contractació mercantil",
          description: "Redacció i revisió de contractes de distribució, subministrament, franquícia i arrendaments amb protecció real d'interessos."
        }
      },
      additional: "També t'ajudem en dissolucions, concursos i reestructuracions societàries."
    }
  }
};

// Función helper para obtener traducciones de features con fallback
function getFeaturesTranslation(key: string) {
  const translation = t(`features.${key}`);
  if (translation === `features.${key}`) {
    // Si no se encuentra la traducción, usar fallback
    const keys = key.split('.');
    let value = featuresFallback[lang];
    for (const k of keys) {
      value = value?.[k];
    }
    return value || key;
  }
  return translation;
}

const title = getFeaturesTranslation('mercantil.title');
const subtitle = getFeaturesTranslation('mercantil.subtitle');
const constitucionTitle = getFeaturesTranslation('mercantil.sections.constitucion.title');
const constitucionDescription = getFeaturesTranslation('mercantil.sections.constitucion.description');
const contratacionTitle = getFeaturesTranslation('mercantil.sections.contratacion.title');
const contratacionDescription = getFeaturesTranslation('mercantil.sections.contratacion.description');
const additional = getFeaturesTranslation('mercantil.additional');
---

<section class="features-split-section">
  <div class="container">
    <div class="features-split-grid">
      <!-- Left Column - Content -->
      <div class="features-split-content features-split-animate">
        <!-- First Container: Title + CTA -->
        <div class="features-split-header features-split-animate">
          <h2 class="features-split-title features-split-animate">{title}</h2>
          <div class="features-split-cta features-split-animate">
            <p>{subtitle}</p>
          </div>
        </div>

        <!-- Second Container: Content Items -->
        <div class="features-split-items-container features-split-animate">
          <div class="features-split-item features-split-animate">
            <h3 class="features-split-subtitle features-split-animate">{constitucionTitle}</h3>
            <p class="features-split-description features-split-animate">
              {constitucionDescription}
            </p>
          </div>

          <div class="features-split-item features-split-animate">
            <h3 class="features-split-subtitle features-split-animate">{contratacionTitle}</h3>
            <p class="features-split-description features-split-animate">
              {contratacionDescription}
            </p>
          </div>

          <div class="features-split-cta features-split-animate">
            <p>{additional}</p>
          </div>
        </div>
      </div>

      <!-- Right Column - Image -->
      <div class="features-split-image features-split-animate-sync">
        <div class="features-split-image-bg features-split-animate-sync"></div>
      </div>
    </div>
  </div>
</section>

<script>
  // Staggered animation for all elements
  document.addEventListener('DOMContentLoaded', function() {
    const animatedElements = document.querySelectorAll('.features-split-animate');
    const syncElements = document.querySelectorAll('.features-split-animate-sync');
    
    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry, index) => {
        if (entry.isIntersecting) {
          setTimeout(() => {
            entry.target.style.opacity = '1';
            entry.target.style.transform = 'translateY(0)';
          }, index * 80);
        }
      });
    }, {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    });

    // Animate sync elements (image) with the title (index 1)
    const syncObserver = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          setTimeout(() => {
            entry.target.style.opacity = '1';
            entry.target.style.transform = 'translateY(0)';
          }, 80); // Same delay as title
        }
      });
    }, {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    });

    animatedElements.forEach(element => {
      observer.observe(element);
    });

    syncElements.forEach(element => {
      syncObserver.observe(element);
    });
  });
</script>
