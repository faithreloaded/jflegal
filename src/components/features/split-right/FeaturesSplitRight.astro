---
import './FeaturesSplitRight.css';
import { type Locale, loadT } from '../../../i18n';

interface Props {
  lang: Locale;
}

const { lang } = Astro.props;
const t = await loadT(lang, ['features']);

// Fallback translations para features si el sistema no funciona
const featuresFallback = {
  es: {
    mercantil: {
      title: "Cómo te ayudamos",
      subtitle: "En JF Legal acompañamos tanto a empresas como a familias en los momentos clave de su actividad o patrimonio.",
      sections: {
        constitucion: {
          title: "Asesoramos a emprendedores que inician su proyecto, a sociedades que necesitan reorganizarse o resolver conflictos entre socios, y a familias que buscan planificar su herencia con seguridad jurídica y eficiencia fiscal.",
          description: ""
        },
        contratacion: {
          title: "También prestamos apoyo continuo en materia contable, fiscal y laboral, garantizando el cumplimiento normativo y ayudando a optimizar recursos.",
          description: ""
        }
      },
      additional: "Nuestra forma de trabajar se basa en la cercanía, la comunicación constante y el análisis riguroso de cada detalle, para ofrecer soluciones prácticas y personalizadas que eviten riesgos y generen tranquilidad."
    }
  },
  en: {
    mercantil: {
      title: "How we help you",
      subtitle: "At JF Legal we accompany both companies and families in the key moments of their activity or assets.",
      sections: {
        constitucion: {
          title: "We advise entrepreneurs who start their project, companies that need to reorganize or resolve conflicts between partners, and families who seek to plan their inheritance with legal security and tax efficiency.",
          description: ""
        },
        contratacion: {
          title: "We also provide continuous support in accounting, tax and labor matters, ensuring regulatory compliance and helping to optimize resources.",
          description: ""
        }
      },
      additional: "Our way of working is based on closeness, constant communication and rigorous analysis of every detail, to offer practical and personalized solutions that avoid risks and generate peace of mind."
    }
  },
  ca: {
    mercantil: {
      title: "Com t'ajudem",
      subtitle: "A JF Legal acompanyem tant a empreses com a famílies en els moments clau de la seva activitat o patrimoni.",
      sections: {
        constitucion: {
          title: "Assessorem a emprenedors que inicien el seu projecte, a societats que necessiten reorganitzar-se o resoldre conflictes entre socis, i a famílies que busquen planificar la seva herència amb seguretat jurídica i eficiència fiscal.",
          description: ""
        },
        contratacion: {
          title: "També prestem suport continu en matèria comptable, fiscal i laboral, garantint el compliment normatiu i ajudant a optimitzar recursos.",
          description: ""
        }
      },
      additional: "La nostra forma de treballar es basa en la proximitat, la comunicació constant i l'anàlisi rigorós de cada detall, per oferir solucions pràctiques i personalitzades que evitin riscos i generin tranquil·litat."
    }
  }
};

// Función helper para obtener traducciones de features con fallback
function getFeaturesTranslation(key: string) {
  const translation = t(`features.${key}`);
  if (translation === `features.${key}`) {
    // Si no se encuentra la traducción, usar fallback
    const keys = key.split('.');
    let value = featuresFallback[lang];
    for (const k of keys) {
      value = value?.[k];
    }
    return value || key;
  }
  return translation;
}

const title = getFeaturesTranslation('mercantil.title');
const subtitle = getFeaturesTranslation('mercantil.subtitle');
const constitucionTitle = getFeaturesTranslation('mercantil.sections.constitucion.title');
const constitucionDescription = getFeaturesTranslation('mercantil.sections.constitucion.description');
const contratacionTitle = getFeaturesTranslation('mercantil.sections.contratacion.title');
const contratacionDescription = getFeaturesTranslation('mercantil.sections.contratacion.description');
const additional = getFeaturesTranslation('mercantil.additional');
---

<section class="features-split-section">
  <div class="container">
    <div class="features-split-grid">
      <!-- Left Column - Content -->
      <div class="features-split-content features-split-animate">
        <!-- First Container: Title + CTA -->
        <div class="features-split-header features-split-animate">
          <h2 class="features-split-title features-split-animate">{title}</h2>
          <div class="features-split-cta features-split-animate">
            <p>{subtitle}</p>
          </div>
        </div>

        <!-- Second Container: Content Items -->
        <div class="features-split-items-container features-split-animate">
          <div class="features-split-item features-split-animate">
            <p class="features-split-description features-split-animate">
              {constitucionTitle}
            </p>
          </div>

          <div class="features-split-item features-split-animate">
            <p class="features-split-description features-split-animate">
              {contratacionTitle}
            </p>
          </div>

          <div class="features-split-cta features-split-animate">
            <p>{additional}</p>
          </div>
        </div>
      </div>

      <!-- Right Column - Image -->
      <div class="features-split-image features-split-animate-sync">
        <div class="features-split-image-bg features-split-animate-sync"></div>
      </div>
    </div>
  </div>
</section>

<script>
  // Staggered animation for all elements
  document.addEventListener('DOMContentLoaded', function() {
    const animatedElements = document.querySelectorAll('.features-split-animate');
    const syncElements = document.querySelectorAll('.features-split-animate-sync');
    
    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry, index) => {
        if (entry.isIntersecting) {
          setTimeout(() => {
            entry.target.style.opacity = '1';
            entry.target.style.transform = 'translateY(0)';
          }, index * 80);
        }
      });
    }, {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    });

    // Animate sync elements (image) with the title (index 1)
    const syncObserver = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          setTimeout(() => {
            entry.target.style.opacity = '1';
            entry.target.style.transform = 'translateY(0)';
          }, 80); // Same delay as title
        }
      });
    }, {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    });

    animatedElements.forEach(element => {
      observer.observe(element);
    });

    syncElements.forEach(element => {
      syncObserver.observe(element);
    });
  });
</script>
